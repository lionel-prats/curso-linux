VIDEO 9:

prompt de la shell vvv 

lionel@lionel-ubuntu:~$

nombre_de_usuario@nombre_de_maquina:~(directorio en el que nos encontramos)$(a partir de donde podemos empezar a escribir comandos)
*** me parece que ~ hace referencia a que estoy parado (por defecto cuando se inicia sesion en la shell) en la carpeta del usuario que inició sesión en la shell, dentro de /home (/home/lionel) 
*** CONFIRMADO -> ~ hace referencia al directorio de trabajo del usuario que inicio sesion en la shell

*** PARA PASAR A USUARIO ADMINISTRDOR (ROOT)
sudo su 
password

*** PARA VOLVER AL USUARIO POR DEFAULT (lionel)
su lionel

clear -> limpiar la consola

history -> historial de comandos que fuimos ejecutando utilizando la shell

ls -> lista archivos y carpetas del directorio donde nos encontramos

mkdir -> crear un nuevo directorio

----------------------------------------

VIDEO 10

type + command -> nos indica que tipo de comando es el comando que escribimos luego de type  

Hay 4 tipos de comandos que debemos comprender

1) Comandos implementados en la propia shell 
    -> El codigo fuente de esa utilidad forma parte del codigo fuente de la shell (type is a shell builtin)

2) Comandos externos: comandos cuyo codigo fuente es parte del SO, pero existen fuera de la shell.
    Ej.: type cp

3) Shell functions -> utilidades escritas con el lenguaje de programacion shellScript (lenguaje propio de la shell)

4) Alias -> Es una referencia (una especie de shortcut) que nosotros podemos crear para invocar diferentes comandos
    Ej.: type ls

Los comandos pueden recibir argumentos y/o parametros 

Parametros -> modifican el comportamiento del comando vvv
ls -l
ls -la
ls -lah

argumentos -> sera sobre lo que se va a ejecutar el comportamiento de ese comado
ls -lah Desktop -> Desktop seria el argumento. Ejecutamos el comportamiento de ls con el parametro -lah sobre el argumento Desktop

----------------------------------------

VIDEO 11

help -> es una utilidad, es un comando que viene incorporado dentro de la propia shell (comando tipo 1 -> comando implementado en la propia shell))

ls --help 

ls -h 

man ls -> pagina interactiva

whatis ls -> nos dice que hace un comando

info ls -> informacion detallada de un comando

apropos (automatic proposition) (es un buscador dentro de la shell) vvv 
Ej.: apropos directory 
    -> nos va a proponer comandos de manera automatica en funcion del texto que pongamos a continuacion
    -> es un buscador, busca el string luego de apropos en todo el SO
    -> Ej. apropos li (entre los resultados, va a traer todos los comandos donde en alguna parte aparezca "client")

----------------------------------------

VIDEO 12

- dentro de la shell de linux podemos dividir un solo comando en varias lineas

ls -lah Desktop -> se puede escribir en varias lineas con \ vvv 

ls \ 
-lah \ 
Desktop

clear;ls -> para correr mas de un comando en simultaneo

comando_inexistente && ls -> estamos indicando que se ejecuten los 2 comandos -> Si falla el primero, no se ejecuta el segundo -> si falla el segundo y el primero esta bien, este se ejecuta el primero y la shell informa la falla del segundo

comando_inexistente || ls -> estamos indicando que se ejecute un comando o el otro -> si falla alguno pero el otro esta bien, se ejecutará el que esté bien y la shell nos informará sobre la falla del otro en caso de que sea el primero de los 2 (si es el segundo no, porque la shell ejecutó solo el 1ero y no intentó con el 2do)

----------------------------------------

VIDEO 13

Ctrl + a -> para posicionar el cursor al inicio
Ctrl + e -> para posicionar el cursor al final
Ctrl + l -> shorcut clear
Ctrl + p -> itero los comandos hacia atras en el historial de comandos ejecutados
Ctrl + n -> itero los comandos hacia adelante en el historial de comandos ejecutados
Ctrl + r -> permite ingresar caracteres para buscar coincidencias con comandos ejecutados previamente 
    -> Ctrl + r -> para iterar sobre las coincidencias (busqueda recursiva)
    -> Ctrl + e -> ejecuta el comando seleccionado 
!! -> ejecuta nuevamente el ultimo comando ejecutando
Ctrl + b -> moverme hacia atras en el comando escrito
Ctrl + f -> moverme hacia adelante en el comando escrito
Alt + . -> rescata el ultimo parametro/argumento del ultimo comando ejecutado
!$ -> referencio al argumento del ultimo comando ejecutado
caracter/eres + Tab -> autocompletado de un comando univoco
caracter/eres + Tab + Tab -> lista los comandos que coincidan con los caracter/eres ingresado/s 
Ctrl + k -> corto desde las posicion del cursor en adelante 
Ctrl + y -> pego lo cortado (si lo hay)
Copiar/Pegar -> seleccionando y click derecho o seleccionando y luego presionando sobre la rueda del mouse

----------------------------------------

VIDEO 15 

Práctica módulo 4: Crear un comando nuevo y su alias 
Voy a crear un comando que en su ejecucion limpie la consola y liste el contenido del directorio donde estemos parados (clear + ls)

1) Chequeo si el nombre que le voy a dar al comando (clist) existe vvv

type clist 
return -> bash: type: clist: not found

2) Creo el alias  vvv 

alias clist='clear;ls'

3) Chequeo si se creó correctamente 

type clist 

alias -> lista los alias existentes en la actual sesion en la shell

unalias clist -> elimino el alias especificado

----- 

Test de evaluacion 

1) La shell de Linux se corresponde con un programa que sirve de interfaz entre el usuario y el sistema operativo

2) Teniendo en cuenta el siguiente prompt de la shell de Linux: santi@santi-virtual-machine:~/Desktop$

La palabra santi-virtual-machine se refire a el nombre del equipo

3) ¿Qué tipo de comando es info dentro de la shell de Linux?
    -> Un comando externo de la shell

4) Teniendo en cuenta el siguiente comando: ls -lah Desktop 
    -> -lah se corresponde con los parametros del comando

5) Las utilidades que nos proporcionan información sobre comandos (help, man, info, whatis...) pueden ejecutarse sobre todos los comandos de la shell, independientemente del tipo